" --------------------------------------------------------------------------
" Global Settings
" --------------------------------------------------------------------------
set nu                                      " set row number
set nocompatible                            " be iMproved
set t_Co=256                                " vim color scheme
set cursorline                              " highlight the current line
set showmatch                               " show mathced brackets
set autoindent smartindent                  " smart auto-indent
set foldmethod=indent                       " default indent mode
set showcmd                                 " show commands that not finished
set directory=/tmp                          " set directory for .swp files
set autochdir                               " automatically change directory
set incsearch hlsearch ignorecase smartcase " settings for search
set title                                   " enable dynamic title

" using 4 spaces to replace tab
set expandtab smarttab
set shiftwidth=4
set softtabstop=4

" dealing with copy-paste (avoid auto-indent when paste codes)
" or use =:set paste= and =:set nopaste=
set pastetoggle=<F2>

" language spell checking
autocmd FileType tex setlocal spell spelllang=en_us
autocmd BufNewFile,BufRead *.txt setlocal spell spelllang=en_us

" color schemes
if ! has("gui_running")
   colorscheme lucius
   LuciusDark
else  " /gvim/
   colorscheme lucius
   LuciusLight
   set guioptions=a  "remove menus, using clipboard instead of primary
   set guicursor=a:blinkwait600-blinkoff600-blinkon600 "blink frequency
   set lines=34 columns=97
   set guifont=DejaVu\ Sans\ Mono:h12
endif

" status line
set laststatus=2
set statusline=%<%h%m%r\ %f%=[%{&filetype},%{&fileencoding},%{&fileformat}]%k\ %-14.(%l/%L,%c%V%)\ %P

" backup
set backup
set backupdir=/tmp

" set cursor to the last position
autocmd BufReadPost *
    \if line("'\"") > 0 && line("'\"") <= line("$") |
        \exe "normal g`\"" |
    \endif

" auto remove extra spaces
autocmd BufWritePre * :%s/\s\+$//e


" --------------------------------------------------------------------------
"  Key maps
" --------------------------------------------------------------------------
nnoremap <F8> :vertical wincmd gf<CR>


" --------------------------------------------------------------------------
" Plugins
" --------------------------------------------------------------------------

" ------------------** Vundle **--------------------------
filetype off				" required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" List of installed plugins:
" repos on github
  Plugin 'LaTeX-Box-Team/LaTeX-Box'
  Plugin 'djoshea/vim-matlab'
  Plugin 'scrooloose/nerdtree'

" vim-scripts repos
  Plugin 'taglist.vim'
  Plugin 'jamessan/vim-gnupg'
  Plugin 'scrooloose/nerdcommenter'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Help
" :PluginList          - list configured bundles
" :PluginInstall       - install(update) bundles
" :PluginSearch foo    - search(or refresh cache first) for foo
" :PluginClean         - confirm(or auto-approve) removal of unused bundles
" see :h vundle for more details or wiki for FAQ

" -----------------** TagList **--------------------------
let Tlist_Enable_Fold_Column=0
let Tlist_Exit_OnlyWindow=1
let Tlist_GainFocus_On_ToggleOpen=1
let Tlist_Show_One_File=1
let tlist_tex_settings   = 'latex;s:sections;g:graphics;l:labels'
let tlist_matlab_settings = 'matlab;f:functions'
" 'T' opens/closes the TagList window
nmap  T :TlistToggle
" 't' jumps to and from the TagList window
nmap  t :TlistOpen

" -----------------** NerdTree **-------------------------
nmap <C-n> :NERDTreeToggle<CR>


" --------------------------------------------------------------------------
" others
" --------------------------------------------------------------------------
syntax on
